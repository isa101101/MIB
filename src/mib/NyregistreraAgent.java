/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mib;

import java.text.SimpleDateFormat;
import java.time.Instant;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import java.util.Date;

/**
 *
 * @author isabellefredriksson
 */
public class NyregistreraAgent extends javax.swing.JFrame {

    private InfDB idb;

    /**
     * Creates new form NyregistreraAgent
     */
    public NyregistreraAgent(InfDB idb) {
        this.idb = idb;
        initComponents();
    }

    NyregistreraAgent() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFyllRutor = new javax.swing.JLabel();
        RubrikNyAgent = new javax.swing.JLabel();
        lblAgentID = new javax.swing.JLabel();
        lblAgentNamn = new javax.swing.JLabel();
        lblAgentTelefon = new javax.swing.JLabel();
        lblAnstDatum = new javax.swing.JLabel();
        lblAgentAdmin = new javax.swing.JLabel();
        lblLösenord = new javax.swing.JLabel();
        lblOmråde = new javax.swing.JLabel();
        btnRegistrera = new javax.swing.JButton();
        lblTillbaka = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JButton();
        lblHämtatID = new javax.swing.JLabel();
        btnHämtaID = new javax.swing.JButton();
        txtNamn = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        txtLösenord = new javax.swing.JTextField();
        cmbOmråde = new javax.swing.JComboBox<>();
        cmbAdmin = new javax.swing.JComboBox<>();
        Datum = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblFyllRutor.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        lblFyllRutor.setText("Fyll i samtliga rutor nedan:");

        RubrikNyAgent.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        RubrikNyAgent.setText("Lägg till en ny agent");

        lblAgentID.setText("Agent ID");

        lblAgentNamn.setText("Namn");

        lblAgentTelefon.setText("Telefon");

        lblAnstDatum.setText("Anst.Datum");

        lblAgentAdmin.setText("Adminstratör");

        lblLösenord.setText("Lösenord");

        lblOmråde.setText("Område");

        btnRegistrera.setText("Registrera");
        btnRegistrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistreraActionPerformed(evt);
            }
        });

        lblTillbaka.setText("Tillbaka till menyn");

        btnTillbaka.setText("Tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        lblHämtatID.setText("                ");

        btnHämtaID.setText("Hämta ID");
        btnHämtaID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHämtaIDActionPerformed(evt);
            }
        });

        txtNamn.setColumns(8);

        txtTelefon.setColumns(8);
        txtTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonActionPerformed(evt);
            }
        });

        txtLösenord.setColumns(8);

        cmbOmråde.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Norrland", "Svealand", "Götaland" }));

        cmbAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nej", "Ja" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblFyllRutor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RubrikNyAgent, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnRegistrera, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAgentID)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblHämtatID))
                                .addComponent(lblTillbaka))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnTillbaka)
                                .addComponent(btnHämtaID)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblLösenord)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtLösenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblAgentAdmin)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblAgentNamn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblOmråde)
                            .addGap(40, 40, 40)
                            .addComponent(cmbOmråde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAgentTelefon)
                            .addComponent(lblAnstDatum))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Datum, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(RubrikNyAgent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFyllRutor)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgentID)
                    .addComponent(lblHämtatID)
                    .addComponent(btnHämtaID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgentNamn)
                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAgentTelefon)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnstDatum)
                    .addComponent(Datum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgentAdmin)
                    .addComponent(cmbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLösenord)
                    .addComponent(txtLösenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOmråde)
                    .addComponent(cmbOmråde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnRegistrera)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTillbaka)
                    .addComponent(btnTillbaka))
                .addContainerGap(103, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonActionPerformed
        //Går ej och ta bort, ignorera!
    }//GEN-LAST:event_txtTelefonActionPerformed

    private void btnHämtaIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHämtaIDActionPerformed
        //Metod hämtar ID som är ledigt i tur så inte det anges något för högt eller upptaget ID
        try {
            String fråga = "SELECT max(Agent_ID) FROM mibdb.Agent";

            String svar1 = idb.fetchSingle(fråga);

            //Skapar en lokal variabel och gör "omtypning" från String till Int
            int svaret = Integer.parseInt(svar1);
            int resultat = svaret + 1; //Kör +1 för att det ska generera nästa lediga ID

            //"Omtypning" från Int till String för att kunna sätta värdet på labeln
            String slutResultat = Integer.toString(resultat);

            lblHämtatID.setText(slutResultat);

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnHämtaIDActionPerformed

    private void btnRegistreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistreraActionPerformed
        //Metod för att lägg till en ny agent

        if (Validering.textFaltVarde(txtNamn) && Validering.textFaltVarde(txtTelefon)
                && Validering.textFaltVarde(txtLösenord)) {

            if (Validering.LösenordLängd(txtLösenord)) {

                if (Validering.textFaltNummer(txtTelefon)) {

                    try {
                        //Hämta värdet från alla fält
                        String ID = lblHämtatID.getText();
                        String Namn = txtNamn.getText();
                        String Telefon = txtTelefon.getText();
                        Date AnstDatum = Datum.getDate();
                        String Admin = cmbAdmin.getSelectedItem().toString();
                        String Lösenord = txtLösenord.getText();
                        String Område = cmbOmråde.getSelectedItem().toString();

                        //Formaterar datumet likt datatypen date så den kan lagras i databasen
                        SimpleDateFormat formatet = new SimpleDateFormat("YYYY/MM/D");
                        String form = formatet.format(AnstDatum.getTime());
                        String Datumet = form;

                        String frågaFinnsRedanNamn = "SELECT mibdb.Agent.Namn FROM mibdb.Agent WHERE mibdb.Agent.Namn = '" + Namn + "'";
                        String SvarFinnsRedanNamn = idb.fetchSingle(frågaFinnsRedanNamn);

                        String AdminStatus = "";

                        //Kontroll så agenternas namn är unika
                        if (SvarFinnsRedanNamn == null) {

                            String Fråga = "SELECT Omrades_ID FROM mibdb.Omrade where Benamning= '" + Område + "'";

                            String svar = idb.fetchSingle(Fråga);

                            //"Omtypning" från string till int så OmrådesID och AgentID kan lagras i databasens tabell
                            int OmrådesID = Integer.parseInt(svar);

                            int AgentID = Integer.parseInt(ID);

                            //Tolkar om adminStatus ska vara Ja eller Nej och sätter värdet J eller N
                            if (Admin.equals("Nej")) {
                                AdminStatus = "N";
                            } else {
                                AdminStatus = "J";
                            }

                            String nyAgent = "INSERT INTO mibdb.Agent (Agent_ID, Namn, Telefon, Anstallningsdatum, Administrator, Losenord, Omrade) VALUES"
                                    + "('" + AgentID + "', '" + Namn + "', '" + Telefon + "', '" + Datumet + "', '" + AdminStatus + "', '" + Lösenord + "', '" + OmrådesID + "')";

                            idb.insert(nyAgent); //Lägger till agent!

                            JOptionPane.showMessageDialog(null, "En ny agent är registrerad!");
                        } else {
                            JOptionPane.showMessageDialog(null, "Det finns redan en agent med det namn du önskade, testa något annat!");
                        }

                    } catch (Exception e) {
                        System.out.println(e.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_btnRegistreraActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        new AdminMenu(idb).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NyregistreraAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NyregistreraAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NyregistreraAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NyregistreraAgent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Datum;
    private javax.swing.JLabel RubrikNyAgent;
    private javax.swing.JButton btnHämtaID;
    private javax.swing.JButton btnRegistrera;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cmbAdmin;
    private javax.swing.JComboBox<String> cmbOmråde;
    private javax.swing.JLabel lblAgentAdmin;
    private javax.swing.JLabel lblAgentID;
    private javax.swing.JLabel lblAgentNamn;
    private javax.swing.JLabel lblAgentTelefon;
    private javax.swing.JLabel lblAnstDatum;
    private javax.swing.JLabel lblFyllRutor;
    private javax.swing.JLabel lblHämtatID;
    private javax.swing.JLabel lblLösenord;
    private javax.swing.JLabel lblOmråde;
    private javax.swing.JLabel lblTillbaka;
    private javax.swing.JTextField txtLösenord;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
